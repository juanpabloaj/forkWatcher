#!/bin/bash
# 10 hours
fetchUpdate=36000 
color=1 # 1 color 0 monocromo
while getopts 'm' OPT #{{{
do 
	case $OPT in
	m)
		color=0
		;;
	esac
done
#}}}
if [[ ! -e .git ]]; then
	#echo ".git dir not found."
	exit 0
fi
#logArg="--graph --pretty=format:%Cgreen%h%Creset``-%C(yellow)%d%Creset``%s``%Cgreen(%cr)``%C(blue)<%an>%Creset --abbrev-commit --date=relative"
remotes=$(git remote)
for remote in $remotes
do
	if [[ ! -e .git/FETCH_HEAD ]]; then
		git fetch $remote
	else
		fetchDate=$(date --utc --reference=.git/FETCH_HEAD +%s)
		now=$(date --utc +%s)
		delta=$(($now - $fetchDate ))
		# if last update to .git/FETCH_HEAD file 
		if [[ $delta -gt $fetchUpdate  ]]; then
			git fetch $remote
		fi
	fi
	if [[ $(git log HEAD..$remote/master) != "" ]]; then
		echo $PWD $remote 
		if [[ $color == "1" ]]; then
			git --no-pager log --graph --pretty=format:"%Cgreen%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset" --abbrev-commit --date=relative HEAD..$remote/master
		else
			git --no-pager log --graph --pretty=format:"%h -%d %s (%cr) <%an>" --abbrev-commit --date=relative HEAD..$remote/master
		fi
		echo 
		echo 
	fi
done
