#!/bin/bash
# 1 hours
fetchUpdate=3600
color=1 # 1 color 0 monocromo
force=1
while getopts 'mf' OPT #{{{
do 
	case $OPT in
	m)
		color=0
		;;
	f)
		force=0
		;;
	esac
done
#}}}
gitDir=$(git rev-parse --git-dir 2> /dev/null )
if [[ "$gitDir" == "" && ! -d .hg ]]; then
	#echo "repo dir not found."
	exit 0
fi
if [[ "$gitDir" != "" ]]; then
	remotes=$(git remote)
	for remote in $remotes
	do
		if [[ ! -e .git/FETCH_HEAD ]]; then
			git fetch $remote >& /dev/null
		else
			fetchDate=$(date --utc --reference=.git/FETCH_HEAD +%s)
			now=$(date --utc +%s)
			delta=$(($now - $fetchDate ))
			# if last update to .git/FETCH_HEAD file 
			if [[ $delta -gt $fetchUpdate  ||Â $force="1" ]]; then
				git fetch $remote >& /dev/null
			fi
		fi
		if [[ $(git log HEAD..$remote/master) != "" ]]; then
			echo $PWD $remote 
			if [[ $color == "1" ]]; then
				git --no-pager log --graph --pretty=format:"%Cgreen%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset" --abbrev-commit --date=relative HEAD..$remote/master
			else
				git --no-pager log --graph --pretty=format:"%h -%d %s (%cr) <%an>" --abbrev-commit --date=relative HEAD..$remote/master
			fi
			echo 
			echo 
		fi
	done
fi
if [[ -d .hg ]]; then
	echo "hg repo"
fi
